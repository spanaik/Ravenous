{"version":3,"sources":["components/SearchBar/SearchBar.js","components/Business/Business.js","components/BusinessList/BusinessList.js","util/Yelp.js","App.js","serviceWorker.js","index.js"],"names":["sortByOptions","Best Match","Highest Rated","Most Reviewed","SearchBar","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","term","location","sortBy","handleTermChange","bind","assertThisInitialized","handleLocationChange","handleSearch","sortByOption","_this2","setState","searchYelp","event","target","value","preventDefault","_this3","keys","map","sortByOptionValue","react_default","a","createElement","key","className","getSortByClass","onClick","handleSortByChange","renderSortByOptions","placeholder","onChange","href","Component","Business","src","business","imageSrc","alt","name","address","city","zipCode","category","rating","reviewCount","BusinessList","undefined","businesses","components_Business_Business","id","Yelp","search","URI","concat","fetch","headers","Authorization","then","response","json","jsonResponse","image_url","address1","zip_code","categories","title","review_count","App","components_SearchBar_SearchBar","components_BusinessList_BusinessList","Boolean","window","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.01e1fe81.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './SearchBar.css';\n\nconst sortByOptions = {\n\t\"Best Match\" : \"best_match\",\n\t\"Highest Rated\" : \"rating\",\n\t\"Most Reviewed\" : \"review_count\"\n};\n\nclass SearchBar extends Component {\n\tconstructor(props){\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tterm:'',\n\t\t\tlocation:'',\n\t\t\tsortBy:'best_match'\n\t\t};\n\n\t\tthis.handleTermChange = this.handleTermChange.bind(this);\n\t\tthis.handleLocationChange = this.handleLocationChange.bind(this);\n\t\tthis.handleSearch = this.handleSearch.bind(this);\n\t}\n\n  getSortByClass(sortByOption) {\n\t\treturn (this.state.sortBy === sortByOption) ? 'active' : '';\n\t};\t\n\n\thandleSortByChange(sortByOption) {\n\t\tthis.setState({\n\t\t\tsortBy: sortByOption\n\t\t}, () => \n\t\t\t{\n\t\t\t\tif (this.state.term && this.state.location) {\n\t\t\t\t\tthis.props.searchYelp(this.state.term, this.state.location, this.state.sortBy)\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\t};\n\t\n\thandleTermChange(event) {\n\t\tthis.setState({\n\t\t\tterm:event.target.value\n\t\t})\n\t};\n\t\n\thandleLocationChange(event){\n\t\tthis.setState({\n\t\t\tlocation: event.target.value\n\t\t})\n\t};\n\n\thandleSearch(event){\n\t\tevent.preventDefault()\n\t\tthis.props.searchYelp(this.state.term, this.state.location, this.state.sortBy);\n\t}\n\n\trenderSortByOptions() {\n\t\treturn Object.keys(sortByOptions).map((sortByOption) => {\n\t\t\tlet sortByOptionValue = sortByOptions[sortByOption];\n\t\t\treturn <li key={sortByOptionValue} \n\t\t\t\t\t\t\t\t className={this.getSortByClass(sortByOptionValue)}\n\t\t\t\t\t\t\t\t onClick={this.handleSortByChange.bind(this,sortByOptionValue)}>\n\t\t\t\t\t\t\t\t {sortByOption}\n\t\t\t\t\t\t\t</li>;\n\t\t});\n\t}\n\n\trender() {\n\t\treturn (\n\t\t<div className=\"SearchBar\">\n\t\t  <div className=\"SearchBar-sort-options\">\n\t\t    <ul>\n\t\t      {this.renderSortByOptions()}\n\t\t    </ul>\n\t\t  </div>\n\t\t  <div className=\"SearchBar-fields\">\n\t\t    <input placeholder=\"Search Businesses\" onChange={this.handleTermChange}/>\n\t\t    <input placeholder=\"Where?\" onChange={this.handleLocationChange}/>\n\t\t  </div>\n\t\t  <div className=\"SearchBar-submit\">\n\t\t    <a onClick={this.handleSearch} href=\"deadlink\">Let's Go</a>\n\t\t  </div>\n\t\t</div>\n\t\t)\n\n\t}\n\n}\n\nexport default SearchBar;","import React, { Component } from 'react';\nimport './Business.css';\n\n\n\nclass Business extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"Business\">\n\t\t\t  <div className=\"image-container\">\n\t\t\t    <img src={this.props.business.imageSrc} alt=''/>\n\t\t\t  </div>\n\t\t\t  <h2>{this.props.business.name}</h2>\n\t\t\t  <div className=\"Business-information\">\n\t\t\t    <div className=\"Business-address\">\n\t\t\t      <p>{this.props.business.address}</p>\n\t\t\t      <p>{this.props.business.city}</p>\n\t\t\t      <p>{this.props.business.state} {this.props.business.zipCode}</p>\n\t\t\t    </div>\n\t\t\t    <div className=\"Business-reviews\">\n\t\t\t      <h3>{this.props.business.category}</h3>\n\t\t\t      <h3 className=\"rating\">{this.props.business.rating} stars</h3>\n\t\t\t      <p>{this.props.business.reviewCount} reviews</p>\n\t\t\t    </div>\n\t\t\t  </div>\n\t\t\t</div>\n\t\t);\n\t}\n};\n\nexport default Business;","import React, { Component } from 'react';\nimport './BusinessList.css';\nimport Business from '../Business/Business';\n\nclass BusinessList extends Component {\n\t\n\trender() {\n\t\tlet toRender =''\n\t\tif (this.props.businesses !== undefined){\n\t\t\ttoRender = (\n\t\t\t\t<div className=\"BusinessList\">\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.props.businesses.map(business=>{\n\t\t\t\t\t\t\treturn <Business business={business} key={business.id}/>;\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t</div>\n\t\t\t);\n\t\t} else {\n\t\t\ttoRender = <h1>Could not find Data</h1>\n\t\t}\n\t\treturn toRender\n\t}\n}\n\nexport default BusinessList;","const apiKey = \"Qz9P8zQBORTWLJ5qfnAo8IYkMMQ3p1VtXuBH6sR8qpZV7JHc4kdoseXv_Uk_4mUwxxp-ZaqplWNe9X7n_yvefu2e8bxFM_dMUP_q5cGO0oy1ta9N15YpiXE8BaaKXHYx\";\n\nconst Yelp = {\n    search : (term, location, sortBy) => {\n        const URI = `https://cors-anywhere.herokuapp.com/https://api.yelp.com/v3/businesses/search?term=${term}&location=${location}&sort_by=${sortBy}`\n        return fetch(URI,\n        {\n            headers:{'Authorization':`Bearer ${apiKey}`}\n        })\n        .then(response => response.json())\n        .then(jsonResponse => {\n            if (jsonResponse.businesses) {\n                return jsonResponse.businesses.map( business => {\n                    return {\n                            id: business.id,\n                            imageSrc: business.image_url,\n                            name: business.name,\n                            address: business.location.address1,\n                            city: business.location.city,\n                            state: business.location.state,\n                            zipCode: business.location.zip_code,\n                            category: business.categories[0].title,\n                            rating: business.rating,\n                            reviewCount:business.review_count\n                            };\n                });\n            }\n        });\n    }\n}\n\nexport default Yelp;","import React, { Component } from 'react';\nimport './App.css';\n\nimport SearchBar from './components/SearchBar/SearchBar';\nimport BusinessList from './components/BusinessList/BusinessList';\nimport Yelp from './util/Yelp';\n\n\nclass App extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      businesses : []\n    };\n\n    this.searchYelp = this.searchYelp.bind(this);\n  }\n  searchYelp(term, location, sortBy) {\n    Yelp.search(term,location,sortBy).then(businesses => {\n      this.setState({\n        businesses:businesses\n      });\n    });\n  }\n  render() {\n    return (\n        <div className=\"App\">\n          <h1>ravenous</h1>\n          <SearchBar searchYelp={this.searchYelp}/>\n          <BusinessList businesses={this.state.businesses}/>\n        </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}